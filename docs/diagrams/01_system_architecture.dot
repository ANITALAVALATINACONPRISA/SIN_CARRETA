digraph SystemArchitecture {
    graph [bgcolor="#0a0e27", fontname="JetBrains Mono", fontsize=12, rankdir=TB, splines=ortho, pad=0.5, nodesep=0.8, ranksep=1.2];
    node [fontname="JetBrains Mono", fontsize=11, style="filled,rounded", shape=box, margin=0.3];
    edge [fontname="JetBrains Mono", fontsize=9, arrowsize=0.8];

    // Title
    label=<
        <table border="0" cellborder="0" cellspacing="0">
            <tr><td><font point-size="24" color="#00ffff"><b>‚ö° MINIMINIMOON SYSTEM ARCHITECTURE</b></font></td></tr>
            <tr><td><font point-size="12" color="#00d4ff">High-Level Unified Evaluation Pipeline</font></td></tr>
        </table>
    >;
    labelloc="t";

    // CLI Layer
    cli [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a1f3a" color="#ff00ff">
            <tr><td bgcolor="#ff00ff"><font color="#000000"><b>üñ•Ô∏è CLI INTERFACE</b></font></td></tr>
            <tr><td align="left"><font color="#ffffff">miniminimoon_cli.py</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚Ä¢ freeze</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚Ä¢ evaluate</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚Ä¢ verify</font></td></tr>
        </table>
    >, fillcolor="#1a1f3a", color="#ff00ff", penwidth=2];

    // Unified Pipeline Layer
    unified [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a2435" color="#00ff88">
            <tr><td bgcolor="#00ff88"><font color="#000000"><b>üîÑ UNIFIED EVALUATION PIPELINE</b></font></td></tr>
            <tr><td align="left"><font color="#ffffff">unified_evaluation_pipeline.py</font></td></tr>
            <tr><td align="left"><font color="#ff00ff">‚ñ∏ Pre-Validation Gates</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚ñ∏ Orchestrator Invocation</font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚ñ∏ Post-Validation Checks</font></td></tr>
        </table>
    >, fillcolor="#1a2435", color="#00ff88", penwidth=3];

    // Core Orchestrator
    orchestrator [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a3040" color="#00d4ff">
            <tr><td bgcolor="#00d4ff"><font color="#000000"><b>‚öôÔ∏è CANONICAL ORCHESTRATOR</b></font></td></tr>
            <tr><td align="left"><font color="#ffffff">miniminimoon_orchestrator.py</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚ñ∏ 15-Stage Pipeline</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚ñ∏ Evidence Registry</font></td></tr>
            <tr><td align="left"><font color="#00ffff">‚ñ∏ Flow Validation</font></td></tr>
        </table>
    >, fillcolor="#1a3040", color="#00d4ff", penwidth=3];

    // Artifacts Output
    artifacts [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a1f2a" color="#ffff00">
            <tr><td bgcolor="#ffff00"><font color="#000000"><b>üì¶ ARTIFACTS</b></font></td></tr>
            <tr><td align="left"><font color="#00ffff">answers_report.json</font></td></tr>
            <tr><td align="left"><font color="#00ffff">evidence_registry.json</font></td></tr>
            <tr><td align="left"><font color="#00ffff">flow_runtime.json</font></td></tr>
            <tr><td align="left"><font color="#00ffff">final_results.json</font></td></tr>
            <tr><td align="left"><font color="#00ffff">coverage_report.json</font></td></tr>
        </table>
    >, fillcolor="#1a1f2a", color="#ffff00", penwidth=2];

    // Input
    input [label="üìÑ PDM Plan\n(PDF/Text)", fillcolor="#2a1f3a", color="#ff00ff", fontcolor="#ffffff", penwidth=2];

    // Edges with cardinality
    input -> cli [label="1:1", color="#ff00ff", fontcolor="#ff00ff", penwidth=2];
    cli -> unified [label="1:1\nAPI Call", color="#00ff88", fontcolor="#00ff88", penwidth=3, style="bold"];
    unified -> orchestrator [label="1:1\nDeterministic", color="#00d4ff", fontcolor="#00d4ff", penwidth=3, style="bold"];
    orchestrator -> artifacts [label="1:N\nMulti-Artifact", color="#ffff00", fontcolor="#ffff00", penwidth=2];

    // Side components
    validators [label=<
        <table border="0" cellborder="0" cellspacing="0" cellpadding="6" bgcolor="#1a1a2e">
            <tr><td><font color="#ff00ff"><b>üõ°Ô∏è VALIDATORS</b></font></td></tr>
            <tr><td><font color="#ffffff">system_validators.py</font></td></tr>
        </table>
    >, fillcolor="#1a1a2e", color="#ff00ff", shape=box, style="filled,dashed"];

    immutability [label=<
        <table border="0" cellborder="0" cellspacing="0" cellpadding="6" bgcolor="#1a1a2e">
            <tr><td><font color="#00ffff"><b>üîí IMMUTABILITY</b></font></td></tr>
            <tr><td><font color="#ffffff">miniminimoon_immutability.py</font></td></tr>
        </table>
    >, fillcolor="#1a1a2e", color="#00ffff", shape=box, style="filled,dashed"];

    unified -> validators [label="Pre/Post", color="#ff00ff", style="dashed", fontcolor="#ff00ff"];
    orchestrator -> immutability [label="Freeze Check", color="#00ffff", style="dashed", fontcolor="#00ffff"];
}
