digraph ContractValidation {
    graph [bgcolor="#0a0e27", fontname="JetBrains Mono", fontsize=12, rankdir=LR, splines=ortho, pad=0.5, nodesep=1.0, ranksep=1.5];
    node [fontname="JetBrains Mono", fontsize=10, style="filled,rounded", shape=box, margin=0.3];
    edge [fontname="JetBrains Mono", fontsize=9, arrowsize=0.8];

    // Title
    label=<
        <table border="0" cellborder="0" cellspacing="0">
            <tr><td><font point-size="24" color="#ff00ff"><b>üìú DATA CONTRACT VALIDATION</b></font></td></tr>
            <tr><td><font point-size="12" color="#00d4ff">Type Checking, Schema Validation, and Mathematical Invariants</font></td></tr>
        </table>
    >;
    labelloc="t";

    // Input Data
    input [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a1f3a" color="#ff00ff">
            <tr><td bgcolor="#ff00ff"><font color="#000000"><b>üì• INPUT DATA</b></font></td></tr>
            <tr><td align="left"><font color="#ffffff">Stage Output</font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚Ä¢ Type: dict</font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚Ä¢ Fields: dynamic</font></td></tr>
        </table>
    >, fillcolor="#1a1f3a", color="#ff00ff", penwidth=2];

    // Validator
    subgraph cluster_validator {
        label=<
            <font color="#00ffff"><b>üîç CONTRACT VALIDATOR</b></font>
        >;
        style=filled;
        fillcolor="#1a2535";
        color="#00ffff";
        penwidth=3;

        type_check [label=<
            <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#2a1f3a" color="#00ff88">
                <tr><td bgcolor="#00ff88"><font color="#000000"><b>‚úì TYPE VALIDATION</b></font></td></tr>
                <tr><td align="left"><font color="#ffffff"><b>Schema Conformance</b></font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ Field types match</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ Required fields present</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ No extra fields</font></td></tr>
                <tr><td align="left"><font color="#00ffff"><b>Performance:</b> ~2ms</font></td></tr>
            </table>
        >, fillcolor="#2a1f3a", color="#00ff88", penwidth=2];

        invariant_check [label=<
            <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#2a1f3a" color="#ffff00">
                <tr><td bgcolor="#ffff00"><font color="#000000"><b>‚àû MATHEMATICAL INVARIANTS</b></font></td></tr>
                <tr><td align="left"><font color="#ffffff"><b>Business Logic Rules</b></font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ PERMUTATION_INVARIANCE</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ MONOTONICITY</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ IDEMPOTENCE</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ CONSERVATION</font></td></tr>
                <tr><td align="left"><font color="#00ffff"><b>Performance:</b> ~0.15ms</font></td></tr>
            </table>
        >, fillcolor="#2a1f3a", color="#ffff00", penwidth=2];

        semantic_check [label=<
            <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#2a1f3a" color="#00d4ff">
                <tr><td bgcolor="#00d4ff"><font color="#000000"><b>üéØ SEMANTIC VALIDATION</b></font></td></tr>
                <tr><td align="left"><font color="#ffffff"><b>Domain Rules</b></font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ Value ranges</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ Referential integrity</font></td></tr>
                <tr><td align="left"><font color="#ffff00">‚ñ∏ Business constraints</font></td></tr>
                <tr><td align="left"><font color="#00ffff"><b>Performance:</b> ~1ms</font></td></tr>
            </table>
        >, fillcolor="#2a1f3a", color="#00d4ff", penwidth=2];
    }

    // Cache layer
    cache [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a3040" color="#ff00ff">
            <tr><td bgcolor="#ff00ff"><font color="#000000"><b>üíæ VALIDATION CACHE</b></font></td></tr>
            <tr><td align="left"><font color="#ffffff"><b>Performance Optimization</b></font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚ñ∏ Cache hit: ~0.1ms</font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚ñ∏ Cache miss: ~3-4ms</font></td></tr>
            <tr><td align="left"><font color="#ffff00">‚ñ∏ 37% speedup</font></td></tr>
            <tr><td align="left"><font color="#00ffff"><b>Avg p95:</b> &lt;5ms</font></td></tr>
        </table>
    >, fillcolor="#1a3040", color="#ff00ff", penwidth=2];

    // Results
    pass [label="‚úÖ VALIDATION\nPASSED", shape=octagon, fillcolor="#00ff88", color="#00ff88", fontcolor="#000000", penwidth=3, style="filled"];
    fail [label="‚ùå VALIDATION\nFAILED", shape=octagon, fillcolor="#ff0000", color="#ff0000", fontcolor="#ffffff", penwidth=3, style="filled"];

    // Flow
    input -> type_check [label="Check", color="#00ffff", fontcolor="#00ffff", penwidth=2];
    type_check -> invariant_check [label="PASS", color="#00ff88", fontcolor="#00ff88", penwidth=2];
    invariant_check -> semantic_check [label="PASS", color="#ffff00", fontcolor="#ffff00", penwidth=2];
    semantic_check -> cache [label="Store", color="#ff00ff", fontcolor="#ff00ff", penwidth=2, style="dashed"];
    semantic_check -> pass [label="PASS", color="#00ff88", fontcolor="#00ff88", penwidth=3, style="bold"];

    // Failure paths
    type_check -> fail [label="FAIL", color="#ff0000", fontcolor="#ff0000", penwidth=2, style="dashed"];
    invariant_check -> fail [label="FAIL", color="#ff0000", fontcolor="#ff0000", penwidth=2, style="dashed"];
    semantic_check -> fail [label="FAIL", color="#ff0000", fontcolor="#ff0000", penwidth=2, style="dashed"];

    // Cache feedback
    cache -> type_check [label="Reuse", color="#ff00ff", fontcolor="#ff00ff", penwidth=1, style="dotted", constraint=false];

    // Examples annotation
    examples [label=<
        <table border="0" cellborder="1" cellspacing="0" cellpadding="8" bgcolor="#1a1a30" color="#ffff00">
            <tr><td bgcolor="#ffff00" colspan="2"><font color="#000000"><b>üìã CONTRACT EXAMPLES</b></font></td></tr>
            <tr><td align="left"><font color="#00ffff">sanitized_text</font></td><td align="left"><font color="#ffffff">str, non-empty</font></td></tr>
            <tr><td align="left"><font color="#00ffff">doc_struct</font></td><td align="left"><font color="#ffffff">dict with full_text</font></td></tr>
            <tr><td align="left"><font color="#00ffff">segments</font></td><td align="left"><font color="#ffffff">list[dict], len &gt; 0</font></td></tr>
            <tr><td align="left"><font color="#00ffff">embeddings</font></td><td align="left"><font color="#ffffff">list[array], shape=(N,D)</font></td></tr>
            <tr><td align="left"><font color="#00ffff">evidence_hash</font></td><td align="left"><font color="#ffffff">str, 64 hex chars</font></td></tr>
        </table>
    >, fillcolor="#1a1a30", color="#ffff00", penwidth=2];

    examples -> input [style="invis"];
}
