name: minimoon-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || true
    - name: Public API contract gate
      run: python -m pytest tests/test_public_api_contract.py -q
    - name: Determinism gate
      run: python -m pytest tests/test_determinism.py -q
    - name: Deterministic validation assertion
      run: |
        python - <<'PY'
        import random
        import numpy as np
        from dag_validation import DAGValidator

        random.seed(0)
        np.random.seed(0)
        first = DAGValidator().validate(sample="ci-seed-check")

        random.seed(1234)
        np.random.seed(1234)
        second = DAGValidator().validate(sample="ci-seed-check")

        if first != second:
            raise SystemExit("DAGValidator validation must be deterministic across seeds")
        PY
    - name: mypy strict API check
      run: mypy --strict causal_pattern_detector.py dag_validation.py document_segmenter.py
    - name: Import purity check
      run: python -c "import causal_pattern_detector, dag_validation, document_segmenter"
    - name: Seeded pytest (fast subset)
      run: PYTHONHASHSEED=0 python -m pytest -q -k "not slow"
    - name: Freeze config
      run: python miniminimoon_immutability.py freeze --repo .
    - name: Evaluate sample
      run: python miniminimoon_cli.py evaluate tests/sample_pdm.txt --repo . --rubric RUBRIC_SCORING.json
    - name: Verify post-execution
      run: python miniminimoon_cli.py verify --repo .
    - name: Rubric check 1:1
      run: python tools/rubric_check.py
    - name: Trace matrix
      run: python tools/trace_matrix.py
