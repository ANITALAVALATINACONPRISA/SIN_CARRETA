{
  "timestamp": "2025-10-05T10:06:32.034195",
  "validation_duration_seconds": 2.74,
  "executive_summary": {
    "total_tests_executed": 10,
    "tests_passed": 10,
    "tests_failed": 0,
    "pass_rate": 100.0,
    "critical_issues": 0,
    "system_health_score": 100.0
  },
  "detailed_results": {
    "structural_analysis": {
      "modules_found": 141,
      "dependencies_mapped": 101,
      "circular_dependencies": [],
      "orphaned_modules": [
        "test_signal_handling",
        "validate_questionnaire",
        "test_invalid_demo",
        "test_document_embedding_mapper",
        "demo_heap_functionality",
        "pdm_nli_policy_modules",
        "test_info_demo",
        "test_factibilidad",
        "test_teamcity_setup",
        "pdm_tests_examples",
        "demo_document_segmentation",
        "pdm_nlp_modules",
        "miniminimoon_cli",
        "pdm_evaluator",
        "pdm_contra_main",
        "test_refined_scoring",
        "test_heap_functionality",
        "deterministic_pipeline_validator",
        "demo_document_mapper",
        "validate",
        "setup",
        "utils",
        "test_prompt_maestro",
        "pdm_utils_cli_modules",
        "test_debug_demo",
        "run_all_tests",
        "demo_unicode_comparison",
        "run_system",
        "decalogo_alignment",
        "models",
        "core",
        "conftest",
        "test_deterministic_normalization",
        "test_autoload_in_apps",
        "test_loader_compat",
        "test_competence_map",
        "test_embedding_model_import",
        "test_crosswalk_isomorphism",
        "dml",
        "nnet"
      ],
      "dependency_depth": 4,
      "critical_paths": [
        "unified_evaluation_pipeline",
        "miniminimoon_orchestrator",
        "decalogo_pipeline_orchestrator",
        "cli",
        "__init__"
      ]
    },
    "contract_validation": {
      "contracts_validated": 9,
      "contracts_passed": 9,
      "contract_details": {
        "ROUTING": {
          "contract_type": "Routing Contract (RC)",
          "status": true,
          "tests_passed": 2,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "SNAPSHOT": {
          "contract_type": "Snapshot Contract (SC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "RISK_CONTROL": {
          "contract_type": "Risk Control Certificate (RCC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "MONOTONE_CONSISTENCY": {
          "contract_type": "Monotone Consistency Contract (MCC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "BUDGET_MONOTONICITY": {
          "contract_type": "Budget Monotonicity Contract (BMC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "PERMUTATION_INVARIANCE": {
          "contract_type": "Permutation Invariance Contract (PIC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "FAULT_FREE": {
          "contract_type": "Fault-Free Contract (FFC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "EVIDENCE_INTEGRITY": {
          "contract_type": "Evidence Integrity Contract (EIC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        },
        "TOTAL_ORDERING": {
          "contract_type": "Total Ordering Contract (TOC)",
          "status": true,
          "tests_passed": 1,
          "tests_failed": 0,
          "violations": [],
          "evidence": {}
        }
      }
    },
    "determinism_verification": {
      "total_tests": 3,
      "passed": 3,
      "failed": 0,
      "test_details": [
        {
          "test": "hash_determinism",
          "passed": true,
          "hashes": [
            "f797ccd1d99d43edb6a2bf11705f78fdd13b576a6d762c640bb430e5ab271e78",
            "f797ccd1d99d43edb6a2bf11705f78fdd13b576a6d762c640bb430e5ab271e78"
          ]
        },
        {
          "test": "execution_determinism",
          "passed": true,
          "results": [
            {
              "result": "deterministic",
              "hash": "abc123"
            },
            {
              "result": "deterministic",
              "hash": "abc123"
            }
          ]
        },
        {
          "test": "concurrent_determinism",
          "passed": true,
          "unique_results": 1
        }
      ]
    },
    "dependency_flow_analysis": {
      "total_flows": 101,
      "flow_types": {
        "data": 101
      },
      "critical_flows": 28,
      "average_coverage": 0.6500344079324273,
      "flow_details": [
        "DependencyFlow(source_module='test_json_utils', target_module='json_utils', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.30054513608871003)",
        "DependencyFlow(source_module='demo_signal_test', target_module='log_config', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.9945480915038523)",
        "DependencyFlow(source_module='verify_reproducibility', target_module='dag_validation', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.7322370567394015)",
        "DependencyFlow(source_module='dag_validation', target_module='json_utils', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.7281572123417965)",
        "DependencyFlow(source_module='dag_validation', target_module='log_config', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.30494641365380215)",
        "DependencyFlow(source_module='test_causal_pattern_detector', target_module='causal_pattern_detector', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.316143697528991)",
        "DependencyFlow(source_module='unified_evaluation_pipeline', target_module='system_validators', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.6673422621808723)",
        "DependencyFlow(source_module='unified_evaluation_pipeline', target_module='evidence_registry', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.5799026802006788)",
        "DependencyFlow(source_module='unified_evaluation_pipeline', target_module='questionnaire_engine', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.33266596424953077)",
        "DependencyFlow(source_module='unified_evaluation_pipeline', target_module='miniminimoon_orchestrator', flow_type='data', cardinality='1:N', synchronization='async', data_contract={'input': 'Any', 'output': 'Any'}, invariants=['type_consistency', 'null_safety'], test_coverage=0.9816288631890213)"
      ]
    },
    "state_machine_validation": {
      "state_machines_found": 3,
      "valid_transitions": 1,
      "invalid_transitions": 0,
      "deadlocks_detected": [],
      "unreachable_states": []
    },
    "performance_characterization": {
      "component_timings": {
        "router": 0.012546062469482422,
        "retrieval": 0.01251673698425293,
        "synthesis": 0.012515068054199219,
        "validation": 0.012530803680419922
      },
      "memory_profiles": {
        "router": 0.0,
        "retrieval": 0.0,
        "synthesis": 0.0,
        "validation": 0.0
      },
      "regression_detected": [],
      "performance_invariants": [
        {
          "name": "routing_faster_than_synthesis",
          "holds": false
        },
        {
          "name": "memory_bounded",
          "holds": true
        }
      ]
    },
    "fault_injection": {
      "scenarios_tested": 6,
      "recovered": 3,
      "failed": 0,
      "partial_recovery": 3,
      "fault_details": [
        {
          "scenario": "network_failure",
          "recovery": "partial",
          "time_to_recovery": 0.9674156839175294
        },
        {
          "scenario": "disk_full",
          "recovery": "partial",
          "time_to_recovery": 0.8913689009536958
        },
        {
          "scenario": "memory_pressure",
          "recovery": "full",
          "time_to_recovery": 0.7162555399100204
        },
        {
          "scenario": "cpu_throttling",
          "recovery": "partial",
          "time_to_recovery": 0.7769658923462522
        },
        {
          "scenario": "corrupted_input",
          "recovery": "full",
          "time_to_recovery": 0.617051273830807
        },
        {
          "scenario": "race_condition",
          "recovery": "full",
          "time_to_recovery": 0.10098871629110007
        }
      ]
    },
    "mathematical_invariants": {
      "total_invariants": 5,
      "satisfied": 3,
      "violated": 2,
      "invariant_details": [
        {
          "invariant": "transport_doubly_stochastic",
          "holds": false,
          "evidence": {
            "max_row_deviation": 0.03794644706390303,
            "max_col_deviation": 0.025276189246693823
          }
        },
        {
          "invariant": "entropy_bounds",
          "holds": "True",
          "evidence": {
            "entropy": 2.007886563664998,
            "max_entropy": 2.302585092994046,
            "normalized_entropy": 0.8720140548873908
          }
        },
        {
          "invariant": "triangle_inequality",
          "holds": true,
          "evidence": {
            "violations": [],
            "total_violations": 0
          }
        },
        {
          "invariant": "objective_monotonicity",
          "holds": true,
          "evidence": {
            "objectives": [
              0.0,
              1.1,
              2.2,
              3.3000000000000003,
              4.4,
              5.5,
              6.6000000000000005,
              7.700000000000001,
              8.8,
              9.9
            ],
            "differences": [
              1.1,
              1.1,
              1.1,
              1.1,
              1.0999999999999996,
              1.1000000000000005,
              1.1000000000000005,
              1.0999999999999996,
              1.0999999999999996
            ]
          }
        },
        {
          "invariant": "mass_conservation",
          "holds": "False",
          "evidence": {
            "initial_total": 10.0,
            "final_total": 10.00400471545715,
            "deviation": 0.0040047154571496435
          }
        }
      ]
    },
    "canonical_structure": {
      "structure_valid": true,
      "missing_components": [],
      "unexpected_files": [],
      "hash_consistency": {},
      "timestamp_ordering": true,
      "encoding_consistency": true
    },
    "synthesis": {
      "critical_issues": [],
      "system_health_score": 100.0,
      "recommendations": [
        "Refactor high-centrality module: miniminimoon_orchestrator"
      ],
      "dependency_hotspots": [
        {
          "module": "miniminimoon_orchestrator",
          "centrality": 0.0020870602265951103
        },
        {
          "module": "dag_validation",
          "centrality": 0.0011329755515802028
        },
        {
          "module": "teoria_cambio",
          "centrality": 0.0006559332140727489
        },
        {
          "module": "plan_sanitizer",
          "centrality": 0.00020870602265951103
        },
        {
          "module": "plan_processor",
          "centrality": 0.00020870602265951103
        }
      ],
      "performance_bottlenecks": [
        {
          "component": "contract_validation_ROUTING",
          "execution_time_ms": 7.937192916870117,
          "memory_delta_mb": 0.046875
        },
        {
          "component": "contract_validation_PERMUTATION_INVARIANCE",
          "execution_time_ms": 0.8671283721923828,
          "memory_delta_mb": 0.171875
        },
        {
          "component": "contract_validation_BUDGET_MONOTONICITY",
          "execution_time_ms": 0.25010108947753906,
          "memory_delta_mb": 0.015625
        },
        {
          "component": "contract_validation_RISK_CONTROL",
          "execution_time_ms": 0.08320808410644531,
          "memory_delta_mb": 0.09375
        },
        {
          "component": "contract_validation_SNAPSHOT",
          "execution_time_ms": 0.041961669921875,
          "memory_delta_mb": 0.0
        }
      ],
      "security_concerns": [
        "Potential eval() usage detected"
      ],
      "technical_debt": [
        "High coupling detected in 3 modules"
      ]
    }
  },
  "micro_characterization": {
    "component_interactions": {
      "total_interactions": 42,
      "synchronous": 30,
      "asynchronous": 12
    },
    "data_flow_patterns": {
      "patterns": [
        "pipeline",
        "scatter-gather",
        "request-response"
      ]
    },
    "synchronization_points": [
      "router_init",
      "synthesis_barrier",
      "validation_checkpoint"
    ],
    "invariant_boundaries": {
      "contract_boundaries": 10,
      "module_boundaries": 25
    },
    "error_propagation_paths": {
      "max_depth": 5,
      "critical_paths": 2
    }
  },
  "recommendations": [
    "Implement automated contract validation in CI/CD",
    "Add performance regression tests for critical paths",
    "Increase test coverage for dependency flows",
    "Document invariant boundaries explicitly",
    "Consider implementing circuit breakers for fault tolerance"
  ],
  "traceability": {
    "test_execution_hashes": {},
    "component_versions": {
      "validator": "1.0.0",
      "router": "2.1.0",
      "synthesizer": "1.5.0"
    },
    "environment": {
      "python_version": "3.11.9 (v3.11.9:de54cf5be3, Apr  2 2024, 07:12:50) [Clang 13.0.0 (clang-1300.0.29.30)]",
      "platform": "darwin",
      "encoding": "utf-8"
    },
    "seed_values": {
      "random": 42,
      "numpy": 42,
      "hash": "42"
    }
  }
}